//components/navbar

"use client"

import { useEffect, useState } from "react"
import Image from "next/image"
import { motion } from "framer-motion"
import Link from "next/link"

const Header = () => {
  const [scrolled, setScrolled] = useState(false)
  const [mobileMenuOpen, setMobileMenuOpen] = useState(false)

  useEffect(() => {
    const handleScroll = () => {
      setScrolled(window.scrollY > 50)
    }

    window.addEventListener("scroll", handleScroll)
    return () => window.removeEventListener("scroll", handleScroll)
  }, [])

  // Framer Motion variants
  const containerVariants = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: {
        staggerChildren: 0.2,
        delayChildren: 0.3,
      },
    },
  }

  const itemVariants = {
    hidden: { y: 20, opacity: 0 },
    visible: {
      y: 0,
      opacity: 1,
      transition: { duration: 0.8, ease: "easeOut" },
    },
  }

  const lineVariants = {
    hidden: { width: 0, opacity: 0 },
    visible: {
      width: "8rem",
      opacity: 1,
      transition: { duration: 1, ease: "easeInOut" },
    },
  }

  const buttonVariants = {
    hidden: { scale: 0.9, opacity: 0 },
    visible: {
      scale: 1,
      opacity: 1,
      transition: { duration: 0.6 },
    },
    hover: {
      scale: 1.05,
      boxShadow: "0 4px 12px rgba(0, 0, 0, 0.15)",
      transition: { duration: 0.3 },
    },
  }

  const mobileMenuVariants = {
    closed: { opacity: 0, y: -20, height: 0, display: "none" },
    open: {
      opacity: 1,
      y: 0,
      height: "auto",
      display: "flex",
      transition: { duration: 0.5 },
    },
  }

  return (
    <header className="relative min-h-screen flex flex-col pb-6">
      {/* Navbar */}
      <motion.nav
        initial={{ y: -20, opacity: 0 }}
        animate={{ y: 0, opacity: 1 }}
        transition={{ duration: 0.7 }}
        className={`py-4 fixed w-full z-50 transition-all duration-300 ${
          scrolled ? "bg-white/95 backdrop-blur-lg shadow-lg" : "bg-transparent backdrop-blur-lg"
        }`}
        aria-label="Main navigation"
      >
        <div className="container mx-auto px-4">
          <div className="flex justify-between items-center">
            {/* Logo */}
            <motion.div whileHover={{ scale: 1.05 }} className="flex items-center">
              <Image
                src="https://utfs.io/f/eqXEbyZmWEZ5lOjgSBG2gjEUo09J4XZinGKBQauTkAFfvIHp"
                alt="logo"
                width={140}
                height={140}
              />
            </motion.div>

            {/* Navigation Links */}
            <div className="hidden md:flex space-x-8">
              <Link href="/" className="text-gray-800 hover:text-blue-600 transition-colors">
                Home
              </Link>
              <Link href="#services" className="text-gray-800 hover:text-blue-600 transition-colors">
                Services
              </Link>
              <Link href="#contact" className="text-gray-800 hover:text-blue-600 transition-colors">
                Contact
              </Link>
              <Link href="#product" className="text-gray-800 hover:text-blue-600 transition-colors">
                Product
              </Link>
            </div>

            {/* Mobile Menu Button */}
            <div className="md:hidden">
              <motion.button
                whileTap={{ scale: 0.9 }}
                className="focus:outline-none text-blue-900"
                aria-label="Toggle mobile menu"
                onClick={() => setMobileMenuOpen(!mobileMenuOpen)}
              >
                <svg
                  className="w-6 h-6"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    strokeLinecap="round"
                    strokeLinejoin="round"
                    strokeWidth={2}
                    d={mobileMenuOpen ? "M6 18L18 6M6 6l12 12" : "M4 6h16M4 12h16M4 18h16"}
                  />
                </svg>
              </motion.button>
            </div>

            {/* CTA Button */}
            <div className="hidden md:block">
              <motion.a
                href="#contact"
                whileHover="hover"
                whileTap={{ scale: 0.95 }}
                variants={buttonVariants}
                initial="hidden"
                animate="visible"
                className="bg-blue-900 text-white px-4 py-2 rounded-lg transition duration-300 shadow-sm hover:bg-blue-700"
                aria-label="Contact us"
              >
                Contact Us
              </motion.a>
            </div>
          </div>

          {/* Mobile Menu */}
          <motion.div
            className="md:hidden flex flex-col space-y-4 mt-4 pb-4"
            initial="closed"
            animate={mobileMenuOpen ? "open" : "closed"}
            variants={mobileMenuVariants}
          >
            <Link href="/" className="text-gray-800 hover:text-blue-600 transition-colors py-2">
              Home
            </Link>
            <Link href="#services" className="text-gray-800 hover:text-blue-600 transition-colors py-2">
              Services
            </Link>
            <Link href="#contact" className="text-gray-800 hover:text-blue-600 transition-colors py-2">
              Contact
            </Link>
            <Link href="#product" className="text-gray-800 hover:text-blue-600 transition-colors py-2">
              Product
            </Link>
            <motion.a
              href="#contact"
              whileHover="hover"
              whileTap={{ scale: 0.95 }}
              variants={buttonVariants}
              className="bg-[#65558F] text-white px-4 py-2 rounded-lg transition duration-300 shadow-sm hover:bg-blue-700 text-center"
              aria-label="Contact us"
            >
              Contact Us
            </motion.a>
          </motion.div>
        </div>
      </motion.nav>

      {/* Main Content */}
      <div className="relative z-20 flex-1 flex items-center pt-32 md:pt-20">
        <div className="container mx-auto px-6">
          <div className="flex flex-col md:flex-row items-center">
            {/* Left Side - Hero Content */}
            <motion.div
              className="w-full md:w-1/2 text-left md:pr-8 mb-12 md:mb-0"
              initial="hidden"
              animate="visible"
              variants={containerVariants}
            >
              <motion.h2
                variants={itemVariants}
                className="text-4xl sm:text-4xl md:text-6xl font-bold text-gray-800 mb-6 leading-tight"
              >
                Revolutionizing Healthcare one Innovation at a time
              </motion.h2>

              <motion.div variants={lineVariants} className="h-1 bg-emerald-400 mb-8"></motion.div>

              <motion.p variants={itemVariants} className="text-xl text-gray-600 mb-10 leading-relaxed max-w-lg">
                At Medirevs, we connect and empower the key players in healthcare with tailored digital solutions.
              </motion.p>

              <motion.div variants={containerVariants} className="flex flex-col sm:flex-row gap-4">
                <motion.a
                  href="#"
                  variants={buttonVariants}
                  whileHover="hover"
                  whileTap={{ scale: 0.95 }}
                  className="bg-emerald-500 hover:bg-emerald-600 text-white font-medium px-8 py-4 rounded-xl shadow-lg transition duration-300 text-center text-lg"
                  aria-label="Explore our solutions"
                >
                  Explore Our Solutions
                </motion.a>

                <motion.a
                  href="#"
                  variants={buttonVariants}
                  whileHover="hover"
                  whileTap={{ scale: 0.95 }}
                  className="bg-blue-900 hover:bg-blue-700 text-white font-medium px-8 py-4 rounded-xl shadow-lg transition duration-300 text-center text-lg"
                  aria-label="Learn about us"
                >
                  Learn About Us
                </motion.a>
              </motion.div>
            </motion.div>

            {/* Right Side - Image */}
            <motion.div
              className="w-full md:w-1/2"
              initial={{ opacity: 0, x: 50 }}
              animate={{ opacity: 1, x: 0 }}
              transition={{ duration: 1.2 }}
            >
              <div className="relative w-full pt-[75%] md:pt-[100%] rounded-2xl overflow-hidden">
                <Image
                  src="https://utfs.io/f/xQbdaz3ivwOM6UFbrevEU1KXya4CuATnIcG7VsJ2DwoHelm3"
                  alt="Healthcare professional using technology"
                  fill
                  className="object-contain rounded-2xl"
                  priority
                  quality={85}
                />
              </div>
            </motion.div>
          </div>
        </div>
      </div>
    </header>
  )
}

export default Header



//components/Mobile App

1. npx shadcn@latest add dialog in the CLI


// components/MobileApp.tsx

import React, { useState } from 'react';
import { Button } from "@/components/ui/button";
import Image from 'next/image';
import Mockup from '@/public/mockup.jpg'; // Ensure this path is correct
import { motion } from 'framer-motion';
import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogHeader,
  DialogTitle,
} from "@/components/ui/dialog"; // Import Dialog components from Shadcn UI

const MobileApp = () => {
  const [isDialogOpen, setIsDialogOpen] = useState(false); // State for dialog visibility

  // Animation variants for text
  const textVariants = {
    hidden: { opacity: 0, y: 20 },
    visible: { opacity: 1, y: 0, transition: { duration: 0.6 } }
  };

  // Animation variants for features
  const featureVariants = {
    hidden: { opacity: 0, x: -20 },
    visible: (i: number) => ({
      opacity: 1,
      x: 0,
      transition: { duration: 0.6, delay: i * 0.2 }
    })
  };

  // Animation variants for image
  const imageVariants = {
    hidden: { opacity: 0, scale: 0.8 },
    visible: { opacity: 1, scale: 1, transition: { duration: 0.8, delay: 0.4 } }
  };

  return (
    <section id='product' className="py-16 bg-gradient-to-br from-mediblue-50 to-medipurple-50">
      <div className="container mx-auto px-4">
        <div className="flex flex-col lg:flex-row items-center">
          <div className="w-full lg:w-1/2 mb-10 lg:mb-0">
            <motion.h2
              className="text-3xl font-bold mb-6"
              variants={textVariants}
              initial="hidden"
              whileInView="visible"
              viewport={{ once: true }}
            >
              MEDIREVS Mobile App(Doctorev)
            </motion.h2>
            <motion.p
              className="text-lg text-muted-foreground mb-8"
              variants={textVariants}
              initial="hidden"
              whileInView="visible"
              viewport={{ once: true }}
            >
              Access comprehensive healthcare services anytime, anywhere with our easy-to-use mobile app. Stay connected with patients, manage health
              records securely, and make well-informed decisions on the go.
            </motion.p>

            <div className="space-y-4 mb-8">
              {[
                {
                  title: "Secure Patient Data Access",
                  description: "View and update patient records securely from your mobile device."
                },
                {
                  title: "Real-time AI Diagnostics",
                  description: "Receive timely insights and recommendations to support clinical decisions."
                },
                {
                  title: "Seamless Integration",
                  description: "Effortlessly works with your existing hospital and clinic systems."
                }
              ].map((feature, index) => (
                <motion.div
                  key={index}
                  className="flex items-start"
                  variants={featureVariants}
                  initial="hidden"
                  whileInView="visible"
                  viewport={{ once: true }}
                  custom={index}
                >
                  <div className={`h-6 w-6 rounded-full bg-medi${['green', 'blue', 'purple'][index]}-100 flex items-center justify-center text-medi${['green', 'blue', 'purple'][index]}-600 mr-4`}>
                    {/* SVG Checkmark Icon */}
                    <svg xmlns="http://www.w3.org/2000/svg" className="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
                    </svg>
                  </div>
                  <div>
                    <h4 className="font-medium">{feature.title}</h4>
                    <p className="text-sm text-muted-foreground">{feature.description}</p>
                  </div>
                </motion.div>
              ))}
            </div>

            <motion.div
              className="flex flex-wrap gap-4"
              variants={textVariants}
              initial="hidden"
              whileInView="visible"
              viewport={{ once: true }}
            >
              <Button onClick={() => setIsDialogOpen(true)} className="bg-black text-white hover:bg-gray-800 flex items-center space-x-2 px-6">
                {/* App Store SVG Icon */}
                <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M17.5781 12.0096C17.5558 9.3443 19.8254 8.01659 19.9189 7.95818C18.7256 6.21316 16.8942 5.97068 16.2583 5.95171C14.6647 5.78443 13.1201 6.86463 12.3136 6.86463C11.4911 6.86463 10.2415 5.96886 8.91431 5.99706C7.19219 6.02429 5.60323 7.00678 4.72403 8.51751C2.89931 11.5936 4.24657 16.1131 6.00018 18.7318C6.87503 20.0225 7.89456 21.4822 9.23864 21.4329C10.5487 21.3798 11.0338 20.5966 12.6257 20.5966C14.2017 20.5966 14.6647 21.4329 16.0312 21.4013C17.4458 21.3798 18.3241 20.1014 19.1682 18.799C20.1811 17.3055 20.5984 15.8324 20.6183 15.755C20.585 15.7418 17.6033 14.6003 17.5781 12.0096Z M15.0843 4.11077C15.7974 3.23371 16.2732 2.03496 16.1314 0.810547C15.126 0.852348 13.8683 1.51181 13.1221 2.36507C12.4624 3.11765 11.8946 4.36397 12.0534 5.54836C13.1792 5.63868 14.3523 4.98062 15.0843 4.11077Z" />
                </svg>
                <span>App Store</span>
              </Button>
              <Button onClick={() => setIsDialogOpen(true)} className="bg-black text-white hover:bg-gray-800 flex items-center space-x-2 px-6">
                {/* Google Play SVG Icon */}
                <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M3.30898 20.2693C3.0083 19.5238 2.83594 18.7018 2.83594 17.8333V7.16667C2.83594 6.2982 3.0083 5.47616 3.30898 4.7307L12.5 12.5L3.30898 20.2693Z M5.82862 21.9237C6.5062 22.2103 7.2593 22.3667 8.0026 22.3667H16.9974C17.7407 22.3667 18.4938 22.2103 19.1714 21.9237L12.5 16.3333L5.82862 21.9237Z M19.1714 3.07633C18.4938 2.78967 17.7407 2.63333 16.9974 2.63333H8.0026C7.2593 2.63333 6.5062 2.78967 5.82862 3.07633L12.5 8.66667L19.1714 3.07633Z M21.691 4.7307C21.9917 5.47616 22.1641 6.2982 22.1641 7.16667V17.8333C22.1641 18.7018 21.9917 19.5238 21.691 20.2693L12.5 12.5L21.691 4.7307Z" />
                </svg>
                <span>Google Play</span>
              </Button>
            </motion.div>
          </div>

          <div className="w-full lg:w-1/2 flex justify-center">
            <motion.div
              className="relative"
              variants={imageVariants}
              initial="hidden"
              whileInView="visible"
              viewport={{ once: true }}
            >
              {/* Decorative blur circles */}
              <div className="absolute -top-10 -left-10 w-64 h-64 bg-mediblue-300/20 rounded-full blur-3xl"></div>
              <div className="absolute -bottom-10 -right-10 w-64 h-64 bg-medipurple-300/20 rounded-full blur-3xl"></div>

              {/* Mockup Image */}
              <div className="relative z-10">
                <Image
                  src={Mockup}
                  alt='phone-mockup'
                  width={300}
                  height={300}
                  priority // Consider adding priority for above-the-fold images
                />
              </div>
            </motion.div>
          </div>
        </div>
      </div>

      {/* Shadcn UI Dialog Component */}
      {/* The `open` prop controls visibility, `onOpenChange` updates the state when dialog opens/closes */}
      <Dialog open={isDialogOpen} onOpenChange={setIsDialogOpen}>
        <DialogContent className="sm:max-w-[425px]"> {/* Optional: Add max-width for smaller screens */}
          <DialogHeader>
            <DialogTitle className="text-2xl font-bold text-center">Coming Soon!</DialogTitle>
            <DialogDescription className="text-gray-700 text-center mt-2">
              The MEDIREVS mobile app will be available on the App Store and Google Play soon. Stay tuned for updates!
            </DialogDescription>
          </DialogHeader>
          <div className="flex justify-center mt-6"> {/* Center the button */}
            <Button onClick={() => setIsDialogOpen(false)}>
              Got it!
            </Button>
          </div>
        </DialogContent>
      </Dialog>
    </section>
  );
};

export default MobileApp;